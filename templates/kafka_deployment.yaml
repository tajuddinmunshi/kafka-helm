apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.metadata.kafka.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "kafkahelmdeploy.kafkalabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kafkahelmdeploy.kafkaselectors" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kafkahelmdeploy.kafkaselectors" . | nindent 8 }}
    spec:
      containers:
        - env:
              - name: KAFKA_INTER_BROKER_LISTENER_NAME
                value: {{ .Values.env.kafka.interBrokerListenerName }}
              - name: KAFKA_ADVERTISED_LISTENERS
                value: {{ .Values.env.kafka.advertisedListeners }}
              - name: KAFKA_BROKER_ID
                value: '{{ .Values.env.kafka.brokerId }}'
              - name: KAFKA_ZOOKEEPER_CONNECT
                value: {{ .Values.env.kafka.zookeeperConnect }}
              - name: KAFKA_LISTENERS
                value: '{{ .Values.env.kafka.listeners }}'
              - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
                value: '{{ .Values.env.kafka.offsetsTopicReplicationFactor }}'
              - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
                value: '{{ .Values.env.kafka.transactionStateLogReplicationFactor }}'
              - name: KAFKA_SUPER_USERS
                value: '{{ .Values.env.kafka.superUsers }}'
              - name: KAFKA_JMX_PORT
                value: '{{ .Values.env.kafka.jmxPort }}'
              - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
                value: {{ .Values.env.kafka.listenerSecurityProtocolMap }}
              - name: KAFKA_MESSAGE_MAX_BYTES
                value: '{{ .Values.env.kafka.messageMaxBytes }}'
              - name: KAFKA_REPLICA_FETCH_MAX_BYTES
                value: '{{ .Values.env.kafka.replicaFetchMaxBytes }}'
              - name: KAFKA_HEAP_OPTS
                value: '{{ .Values.env.kafka.heapOpts }}'
          name: {{ .Values.metadata.kafka.name }}
          image: "{{ .Values.image.kafka.repository }}:{{ .Values.image.kafka.tag }}"
          imagePullPolicy: {{ .Values.image.kafka.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.kafka.port }}
          
